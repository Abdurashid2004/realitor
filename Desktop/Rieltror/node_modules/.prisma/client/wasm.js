
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.13.0
 * Query Engine version: b9a39a7ee606c28e3455d0fd60e78c3ba82b1a2b
 */
Prisma.prismaVersion = {
  client: "5.13.0",
  engine: "b9a39a7ee606c28e3455d0fd60e78c3ba82b1a2b"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RealtorScalarFieldEnum = {
  id: 'id',
  name: 'name',
  is_active: 'is_active',
  reg_date: 'reg_date',
  deactivate_date: 'deactivate_date',
  photo: 'photo',
  login: 'login',
  password: 'password'
};

exports.Prisma.ObjectTypeScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ResidenceTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  objectTypeId: 'objectTypeId'
};

exports.Prisma.ObjectCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ObjectStatusScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.CurrencyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  rate: 'rate'
};

exports.Prisma.RenovationScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.WindowSideScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.RoomTypeScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ObjectScalarFieldEnum = {
  id: 'id',
  name: 'name',
  realtorId: 'realtorId',
  objectTypeId: 'objectTypeId',
  residenceTypeId: 'residenceTypeId',
  objectCategoryId: 'objectCategoryId',
  objectStatusId: 'objectStatusId',
  is_studio: 'is_studio',
  floor: 'floor',
  floors_in_building: 'floors_in_building',
  total_area: 'total_area',
  live_area: 'live_area',
  kitchen_area: 'kitchen_area',
  rooms_area: 'rooms_area',
  price: 'price',
  currencyId: 'currencyId',
  price_per_square: 'price_per_square',
  price_type: 'price_type',
  renovationId: 'renovationId',
  windowSideId: 'windowSideId',
  roomTypeId: 'roomTypeId',
  is_apartment: 'is_apartment',
  is_luxury: 'is_luxury',
  ceiling_height: 'ceiling_height',
  combined_bath_count: 'combined_bath_count',
  separate_bath_count: 'separate_bath_count',
  loggia_count: 'loggia_count',
  loggia_description: 'loggia_description',
  balcony_count: 'balcony_count',
  balcony_description: 'balcony_description',
  general_description: 'general_description',
  cadastral_number: 'cadastral_number',
  document: 'document',
  layout: 'layout',
  fotos: 'fotos',
  online_show: 'online_show',
  video: 'video'
};

exports.Prisma.OwnerShipScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ReasonDeletingScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.OwnerCooperationScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.RelationshipTypeScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.OwnerRelationScalarFieldEnum = {
  id: 'id',
  ownerShipId: 'ownerShipId',
  reasonDeletingId: 'reasonDeletingId',
  ownerCooperationId: 'ownerCooperationId',
  relationshipTypeId: 'relationshipTypeId',
  commission_amount: 'commission_amount',
  commission_comment: 'commission_comment',
  deposit_amount: 'deposit_amount',
  deposit_paid: 'deposit_paid',
  owner_price_ideal: 'owner_price_ideal',
  owner_price_real: 'owner_price_real',
  owner_price_minimal: 'owner_price_minimal'
};

exports.Prisma.RegionScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.DistrictScalarFieldEnum = {
  id: 'id',
  name: 'name',
  regionId: 'regionId'
};

exports.Prisma.AreaScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.MahallaScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.StreetScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.MetroScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.AddressScalarFieldEnum = {
  id: 'id',
  regionId: 'regionId',
  districtId: 'districtId',
  areaId: 'areaId',
  mahallaId: 'mahallaId',
  streetId: 'streetId',
  house_number: 'house_number',
  apartment_number: 'apartment_number',
  location: 'location',
  landmark: 'landmark',
  metroId: 'metroId',
  location_description: 'location_description'
};

exports.Prisma.BuildingConditionScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.BuildingSeriaScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.WallMaterialScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.OverlapsScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.WaterSupplyScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.HeatingSystemScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.ParkingScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.BuildingCharacterScalarFieldEnum = {
  id: 'id',
  buildingConditionId: 'buildingConditionId',
  buildingSeriaId: 'buildingSeriaId',
  building_year: 'building_year',
  wallMaterialId: 'wallMaterialId',
  overlapsId: 'overlapsId',
  waterSupplyId: 'waterSupplyId',
  heatingSystemId: 'heatingSystemId',
  is_gas: 'is_gas',
  is_electric: 'is_electric',
  passenger_elevators_count: 'passenger_elevators_count',
  freight_elevators_count: 'freight_elevators_count',
  is_building_security: 'is_building_security',
  parkingId: 'parkingId',
  is_demolition_planned: 'is_demolition_planned'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Realtor: 'Realtor',
  ObjectType: 'ObjectType',
  ResidenceType: 'ResidenceType',
  ObjectCategory: 'ObjectCategory',
  ObjectStatus: 'ObjectStatus',
  Currency: 'Currency',
  Renovation: 'Renovation',
  WindowSide: 'WindowSide',
  RoomType: 'RoomType',
  Object: 'Object',
  OwnerShip: 'OwnerShip',
  ReasonDeleting: 'ReasonDeleting',
  OwnerCooperation: 'OwnerCooperation',
  RelationshipType: 'RelationshipType',
  OwnerRelation: 'OwnerRelation',
  Region: 'Region',
  District: 'District',
  Area: 'Area',
  Mahalla: 'Mahalla',
  Street: 'Street',
  Metro: 'Metro',
  Address: 'Address',
  BuildingCondition: 'BuildingCondition',
  BuildingSeria: 'BuildingSeria',
  WallMaterial: 'WallMaterial',
  Overlaps: 'Overlaps',
  WaterSupply: 'WaterSupply',
  HeatingSystem: 'HeatingSystem',
  Parking: 'Parking',
  BuildingCharacter: 'BuildingCharacter'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
