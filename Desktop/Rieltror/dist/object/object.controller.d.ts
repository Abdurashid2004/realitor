import { ObjectService } from './object.service';
import { CreateObjectDto } from './dto/create-object.dto';
import { UpdateObjectDto } from './dto/update-object.dto';
export declare class ObjectController {
    private readonly objectService;
    constructor(objectService: ObjectService);
    create(createObjectDto: CreateObjectDto): Promise<{
        id: number;
        name: string;
        realtorId: number;
        objectTypeId: number;
        residenceTypeId: number;
        objectCategoryId: number;
        objectStatusId: number;
        is_studio: boolean;
        floor: number;
        floors_in_building: number;
        total_area: number;
        live_area: number;
        kitchen_area: number;
        rooms_area: number;
        price: number;
        currencyId: number;
        price_per_square: number;
        price_type: number;
        renovationId: number;
        windowSideId: number;
        roomTypeId: number;
        is_apartment: boolean;
        is_luxury: boolean;
        ceiling_height: number;
        combined_bath_count: number;
        separate_bath_count: number;
        loggia_count: number;
        loggia_description: string;
        balcony_count: number;
        balcony_description: string;
        general_description: string;
        cadastral_number: number;
        document: string;
        layout: string;
        fotos: string;
        online_show: boolean;
        video: string;
    }>;
    findAll(): Promise<{
        id: number;
        name: string;
        realtorId: number;
        objectTypeId: number;
        residenceTypeId: number;
        objectCategoryId: number;
        objectStatusId: number;
        is_studio: boolean;
        floor: number;
        floors_in_building: number;
        total_area: number;
        live_area: number;
        kitchen_area: number;
        rooms_area: number;
        price: number;
        currencyId: number;
        price_per_square: number;
        price_type: number;
        renovationId: number;
        windowSideId: number;
        roomTypeId: number;
        is_apartment: boolean;
        is_luxury: boolean;
        ceiling_height: number;
        combined_bath_count: number;
        separate_bath_count: number;
        loggia_count: number;
        loggia_description: string;
        balcony_count: number;
        balcony_description: string;
        general_description: string;
        cadastral_number: number;
        document: string;
        layout: string;
        fotos: string;
        online_show: boolean;
        video: string;
    }[]>;
    findOne(id: string): Promise<{
        id: number;
        name: string;
        realtorId: number;
        objectTypeId: number;
        residenceTypeId: number;
        objectCategoryId: number;
        objectStatusId: number;
        is_studio: boolean;
        floor: number;
        floors_in_building: number;
        total_area: number;
        live_area: number;
        kitchen_area: number;
        rooms_area: number;
        price: number;
        currencyId: number;
        price_per_square: number;
        price_type: number;
        renovationId: number;
        windowSideId: number;
        roomTypeId: number;
        is_apartment: boolean;
        is_luxury: boolean;
        ceiling_height: number;
        combined_bath_count: number;
        separate_bath_count: number;
        loggia_count: number;
        loggia_description: string;
        balcony_count: number;
        balcony_description: string;
        general_description: string;
        cadastral_number: number;
        document: string;
        layout: string;
        fotos: string;
        online_show: boolean;
        video: string;
    }>;
    update(id: string, updateObjectDto: UpdateObjectDto): Promise<{
        id: number;
        name: string;
        realtorId: number;
        objectTypeId: number;
        residenceTypeId: number;
        objectCategoryId: number;
        objectStatusId: number;
        is_studio: boolean;
        floor: number;
        floors_in_building: number;
        total_area: number;
        live_area: number;
        kitchen_area: number;
        rooms_area: number;
        price: number;
        currencyId: number;
        price_per_square: number;
        price_type: number;
        renovationId: number;
        windowSideId: number;
        roomTypeId: number;
        is_apartment: boolean;
        is_luxury: boolean;
        ceiling_height: number;
        combined_bath_count: number;
        separate_bath_count: number;
        loggia_count: number;
        loggia_description: string;
        balcony_count: number;
        balcony_description: string;
        general_description: string;
        cadastral_number: number;
        document: string;
        layout: string;
        fotos: string;
        online_show: boolean;
        video: string;
    }>;
    remove(id: string): Promise<{
        id: number;
        name: string;
        realtorId: number;
        objectTypeId: number;
        residenceTypeId: number;
        objectCategoryId: number;
        objectStatusId: number;
        is_studio: boolean;
        floor: number;
        floors_in_building: number;
        total_area: number;
        live_area: number;
        kitchen_area: number;
        rooms_area: number;
        price: number;
        currencyId: number;
        price_per_square: number;
        price_type: number;
        renovationId: number;
        windowSideId: number;
        roomTypeId: number;
        is_apartment: boolean;
        is_luxury: boolean;
        ceiling_height: number;
        combined_bath_count: number;
        separate_bath_count: number;
        loggia_count: number;
        loggia_description: string;
        balcony_count: number;
        balcony_description: string;
        general_description: string;
        cadastral_number: number;
        document: string;
        layout: string;
        fotos: string;
        online_show: boolean;
        video: string;
    }>;
}
