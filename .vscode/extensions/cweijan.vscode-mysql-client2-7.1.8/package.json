{
	"name": "vscode-mysql-client2",
	"displayName": "MySQL",
	"description": "Database manager for MySQL/MariaDB, PostgreSQL, SQLite, Redis and ElasticSearch.",
	"version": "7.1.8",
	"publisher": "cweijan",
	"icon": "resources/databases.png",
	"pricing": "Trial",
	"engines": {
		"vscode": "^1.67.0"
	},
	"categories": [
		"Programming Languages",
		"Keymaps"
	],
	"extensionPack": [
		"cweijan.dbclient-jdbc"
	],
	"keywords": [
		"SQL",
		"MySQL",
		"Database",
		"Postgresql",
		"Redis"
	],
	"bugs": {
		"url": "https://github.com/cweijan/vscode-database-client/issues",
		"email": "cweijan@163.com"
	},
	"homepage": "https://github.com/cweijan/vscode-database-client/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/cweijan/vscode-database-client.git"
	},
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension",
	"contributes": {
		"languages": [
			{
				"id": "es",
				"aliases": [
					"ElasticSearch",
					"es",
					"elasticsearch"
				],
				"extensions": [
					"es"
				],
				"configuration": "./syntaxes/common-block.configuration.json",
				"icon": {
					"dark": "./resources/icon/server/elasticsearch.svg",
					"light": "./resources/icon/server/elasticsearch.svg"
				}
			},
			{
				"id": "ndjson",
				"aliases": [
					"Newline Delimited JSON",
					"ndjson"
				],
				"extensions": [
					"ndjson"
				],
				"configuration": "./syntaxes/common-line.configuration.json",
				"icon": {
					"dark": "./resources/ssh/json.svg",
					"light": "./resources/ssh/json.svg"
				}
			},
			{
				"id": "cql",
				"aliases": [
					"CQL",
					"cypher"
				],
				"extensions": [
					".cql"
				],
				"configuration": "./syntaxes/common-line.configuration.json",
				"icon": {
					"dark": "./resources/icon/server/neo4j.png",
					"light": "./resources/icon/server/neo4j.png"
				}
			},
			{
				"id": "dbclient-js",
				"aliases": [
					"JavaScript(Database Client)"
				],
				"extensions": [
					".dbclient-js"
				],
				"configuration": "./syntaxes/common-block.configuration.json",
				"icon": {
					"dark": "./resources/ssh/javascript.svg",
					"light": "./resources/ssh/javascript.svg"
				}
			},
			{
				"id": "dbclient-mq-consumer",
				"aliases": [
					"MQ Consumer(Database Client)"
				],
				"extensions": [
					".consumer"
				],
				"configuration": "./syntaxes/common-block.configuration.json",
				"icon": {
					"dark": "./resources/icon/editor/message.png",
					"light": "./resources/icon/editor/consume.png"
				}
			},
			{
				"id": "json",
				"extensions": [
					".producer"
				]
			}
		],
		"snippets": [
			{
				"language": "sql",
				"path": "./syntaxes/snippets.json"
			}
		],
		"grammars": [
			{
				"language": "sql",
				"scopeName": "source.sql",
				"path": "./syntaxes/sql.tmLanguage.json"
			},
			{
				"language": "es",
				"scopeName": "source.es",
				"path": "./syntaxes/es.tmLanguage.json"
			},
			{
				"language": "ndjson",
				"scopeName": "source.ndjson",
				"path": "./syntaxes/ndjson.tmLanguage.json"
			},
			{
				"language": "cql",
				"scopeName": "source.cql",
				"path": "./syntaxes/cql.tmLanguage.json"
			},
			{
				"language": "dbclient-js",
				"scopeName": "source.dblicent.js",
				"path": "./syntaxes/dbclient-js.tmLanguage.json"
			},
			{
				"language": "dbclient-mq-consumer",
				"scopeName": "source.dbclient-mq.consumer",
				"path": "./syntaxes/mq-consumer.tmLanguage.json"
			}
		],
		"authentication": [
			{
				"id": "dbclient.auth",
				"label": "Database Client"
			}
		],
		"notebooks": [
			{
				"id": "sql-book",
				"type": "sql-book",
				"displayName": "SQL Book",
				"selector": [
					{
						"filenamePattern": "*.sqlbook"
					}
				]
			},
			{
				"id": "sql-query-book",
				"type": "sql-query-book",
				"displayName": "SQL Book",
				"selector": [
					{
						"filenamePattern": "*.sql"
					},
					{
						"filenamePattern": "*.cql"
					}
				],
				"priority": "option"
			}
		],
		"viewsWelcome": [
			{
				"view": "github.cweijan.mysql",
				"contents": "You haven't created any connections [learn more](https://github.com/cweijan/vscode-database-client).\n[Create Connection](command:mysql.connection.add)"
			},
			{
				"view": "github.cweijan.nosql",
				"contents": "You haven't created any connections [learn more](https://github.com/cweijan/vscode-database-client).\n[Create Connection](command:mysql.connection.add)"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "github-cweijan-mysql",
					"title": "Database",
					"icon": "resources/icon/database.svg"
				},
				{
					"id": "github-dbclient-history",
					"title": "SQL History",
					"icon": "resources/icon/history.svg"
				},
				{
					"id": "github-cweijan-nosql",
					"title": "NoSQL",
					"icon": "resources/icon/layer-group.svg"
				}
			],
			"panel": [
				{
					"id": "dbclient-search-result",
					"title": "Full-Text Search",
					"icon": "resources/icon/database.svg"
				}
			]
		},
		"views": {
			"github-cweijan-mysql": [
				{
					"id": "github.cweijan.mysql",
					"name": "Database"
				}
			],
			"github-dbclient-history": [
				{
					"id": "github.dbclient.history",
					"name": "History",
					"when": "showDatabaseClientHistory"
				}
			],
			"github-cweijan-nosql": [
				{
					"id": "github.cweijan.nosql",
					"name": "NoSQL"
				}
			],
			"dbclient-search-result": [
				{
					"id": "dbclient.search.result",
					"name": "Full-Text Search",
					"when": "fullTextSearch"
				}
			]
		},
		"commands": [
			{
				"command": "mysql2.refresh",
				"title": "%command.refresh%",
				"category": "Database Client",
				"icon": "$(refresh)"
			},
			{
				"command": "mysql.name.copy",
				"title": "%command.name.copy%"
			},
			{
				"command": "mysql.console.open",
				"title": "%command.console.open%",
				"icon": "$(gear)",
				"category": "Database Client"
			},
			{
				"command": "mysql.server.info",
				"title": "%command.server.info%"
			},
			{
				"command": "mysql.node.create",
				"title": "%command.node.create%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.runSQL",
				"title": "%command.runQuery%",
				"icon": "$(run)"
			},
			{
				"command": "mysql.runAllQuery",
				"title": "%command.runAllQuery%",
				"icon": "$(run)"
			},
			{
				"command": "mysql.template.sql",
				"title": "%command.template.sql%",
				"icon": "$(symbol-file)"
			},
			{
				"command": "mysql.notebook.sql",
				"title": "%command.template.sql%",
				"icon": "$(notebook)"
			},
			{
				"command": "mysql.node.filterChildren",
				"title": "%command.node.filterChildren%",
				"icon": "$(filter)"
			},
			{
				"command": "mysql.host.copy",
				"title": "%command.host.copy%"
			},
			{
				"command": "mysql.connection.add",
				"title": "%command.connection.add%",
				"icon": "$(add)",
				"category": "Database Client"
			},
			{
				"command": "mysql.connection.edit",
				"title": "%command.connection.edit%"
			},
			{
				"command": "mysql.connection.copy",
				"title": "%command.connection.copy%"
			},
			{
				"command": "mysql.connection.disable",
				"title": "%command.connection.disable%"
			},
			{
				"command": "mysql.connection.delete",
				"title": "%command.connection.delete%",
				"icon": "$(trash)"
			},
			{
				"command": "mysql.connection.terminal",
				"title": "%command.connection.terminal%",
				"icon": "$(terminal)"
			},
			{
				"command": "mysql.connection.startRdp",
				"title": "%command.connection.startRdp%",
				"icon": "$(terminal)"
			},
			{
				"command": "mysql.connection.selectDb",
				"title": "%command.connection.selectDb%",
				"icon": "$(filter)"
			},
			{
				"command": "mysql.connection.copyKey",
				"title": "%command.connection.copyKey%"
			},
			{
				"command": "mysql.db.active",
				"title": "%command.db.active%",
				"category": "Database Client"
			},
			{
				"command": "mysql.db.truncate",
				"title": "%command.db.truncate%"
			},
			{
				"command": "mysql.database.add",
				"title": "%command.database.add%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.db.drop",
				"title": "%command.node.drop%"
			},
			{
				"command": "mysql.document.generate",
				"title": "%command.document.generate%"
			},
			{
				"command": "mysql.package.source",
				"title": "%command.package.source%"
			},
			{
				"command": "mysql.package.drop",
				"title": "%command.node.drop%"
			},
			{
				"command": "mysql.query.switch",
				"title": "%command.query.switch%",
				"icon": "$(symbol-file)"
			},
			{
				"command": "mysql.query.add",
				"title": "%command.query.add%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.query.book.add",
				"title": "%command.query.book.add%",
				"icon": "$(notebook)"
			},
			{
				"command": "mysql.query.rename",
				"title": "%command.query.rename%",
				"icon": "$(edit)"
			},
			{
				"command": "mysql.query.delete",
				"title": "%command.query.delete%",
				"icon": "$(trash)"
			},
			{
				"command": "mysql.template.procedure",
				"title": "%command.template.procedure%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.delete.procedure",
				"title": "%command.delete.procedure%"
			},
			{
				"command": "mysql.template.function",
				"title": "%command.template.function%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.delete.function",
				"title": "%command.delete.function%"
			},
			{
				"command": "mysql.delete.event",
				"title": "%command.delete.event%"
			},
			{
				"command": "mysql.template.event.new",
				"title": "%command.template.event.new%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.delete.trigger",
				"title": "%command.delete.trigger%"
			},
			{
				"command": "mysql.template.trigger",
				"title": "%command.template.trigger%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.struct.diff",
				"title": "%command.struct.diff%",
				"category": "Database Client",
				"icon": "$(sync)"
			},
			{
				"command": "mysql.data.export",
				"title": "%command.data.export%"
			},
			{
				"command": "mysql.struct.export",
				"title": "%command.struct.export%"
			},
			{
				"command": "mysql.data.import",
				"title": "%command.sql.import%"
			},
			{
				"command": "mysql.redis.import",
				"title": "%command.data.import%"
			},
			{
				"command": "mysql.mock.run",
				"title": "%command.mock.run%",
				"icon": "$(run)"
			},
			{
				"command": "mysql.mock.table",
				"title": "%command.mock.table%"
			},
			{
				"command": "mysql.template.table.select",
				"title": "%command.template.table.select%",
				"icon": "$(symbol-file)"
			},
			{
				"command": "mysql.template.table.insert",
				"title": "%command.template.table.insert%"
			},
			{
				"command": "mysql.template.table.update",
				"title": "%command.template.table.update%"
			},
			{
				"command": "mysql.template.table.delete",
				"title": "%command.template.table.delete%"
			},
			{
				"command": "mysql.template.table",
				"title": "%command.template.table%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.table.copy",
				"title": "%command.table.copy%"
			},
			{
				"command": "mysql.table.truncate",
				"title": "%command.table.truncate%"
			},
			{
				"command": "mysql.table.drop",
				"title": "%command.node.drop%"
			},
			{
				"command": "mysql.table.sort",
				"title": "%command.table.sort%",
				"icon": "$(list-ordered)"
			},
			{
				"command": "mysql.changeTableName",
				"title": "%command.changeTableName%"
			},
			{
				"command": "mysql.table.design",
				"title": "%command.table.design%",
				"icon": "$(edit)"
			},
			{
				"command": "mysql.table.source",
				"title": "%command.table.source%"
			},
			{
				"command": "mysql.table.show",
				"title": "%command.table.show%",
				"icon": "$(three-bars)"
			},
			{
				"command": "mysql.table.fullTextSearch",
				"title": "%command.table.fullTextSearch%",
				"icon": "$(search)"
			},
			{
				"command": "mysql.column.add",
				"title": "%command.column.add%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.column.up",
				"title": "%command.column.up%",
				"icon": "$(arrow-up)"
			},
			{
				"command": "mysql.column.down",
				"title": "%command.column.down%",
				"icon": "$(arrow-down)"
			},
			{
				"command": "mysql.column.update",
				"title": "%command.column.update%"
			},
			{
				"command": "mysql.column.drop",
				"title": "%command.column.drop%"
			},
			{
				"command": "mysql.column.createIndex",
				"title": "%command.column.createIndex%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.index.modify",
				"title": "%command.index.modify%"
			},
			{
				"command": "mysql.index.drop",
				"title": "%command.index.drop%"
			},
			{
				"command": "mysql.template.view",
				"title": "%command.template.view%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.delete.view",
				"title": "%command.delete.view%"
			},
			{
				"command": "mysql.view.source",
				"title": "%command.view.source%"
			},
			{
				"command": "mysql.user.grant",
				"title": "%command.user.grant%"
			},
			{
				"command": "mysql.change.user",
				"title": "%command.change.user%"
			},
			{
				"command": "mysql.template.user",
				"title": "%command.template.user%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.delete.user",
				"title": "%command.delete.user%"
			},
			{
				"command": "mysql.s3.selectBuckets",
				"title": "%command.s3.selectBuckets%",
				"icon": "$(filter)"
			},
			{
				"command": "mysql.file.delete",
				"title": "%command.file.delete%"
			},
			{
				"command": "mysql.s3.url.temp",
				"title": "%command.s3.url.temp%"
			},
			{
				"command": "mysql.s3.url.public",
				"title": "%command.s3.url.public%"
			},
			{
				"command": "mysql.s3.openSite",
				"title": "%command.s3.openSite%"
			},
			{
				"command": "mysql.file.new",
				"title": "%command.file.new%"
			},
			{
				"command": "mysql.file.upload",
				"title": "%command.file.upload%",
				"icon": "$(cloud-upload)"
			},
			{
				"command": "mysql.folder.upload",
				"title": "%command.folder.upload%",
				"icon": "$(cloud-upload)"
			},
			{
				"command": "mysql.folder.new",
				"title": "%command.folder.new%"
			},
			{
				"command": "mysql.bucket.new",
				"title": "%command.bucket.new%"
			},
			{
				"command": "mysql.path.copy",
				"title": "%command.path.copy%"
			},
			{
				"command": "mysql.file.download",
				"title": "%command.file.download%",
				"icon": "$(cloud-download)"
			},
			{
				"command": "mysql.node.rename",
				"title": "%command.node.rename%",
				"icon": "$(edit)"
			},
			{
				"command": "mysql.node.favorite",
				"title": "%command.node.favorite%",
				"icon": "$(star-empty)"
			},
			{
				"command": "mysql.node.favorite.cancel",
				"title": "%command.node.favorite%",
				"icon": "$(star-full)"
			},
			{
				"command": "mysql.node.favorite.clear",
				"title": "%command.node.favorite.clear%",
				"icon": "$(clear-all)"
			},
			{
				"command": "mysql.es.stream.new",
				"title": "Create Data Stream",
				"icon": "$(add)"
			},
			{
				"command": "mysql.es.index.new",
				"title": "Create New Index",
				"icon": "$(add)"
			},
			{
				"command": "mysql.es.template.search",
				"title": "Search Template"
			},
			{
				"command": "mysql.es.template.insert",
				"title": "Insert Template"
			},
			{
				"command": "mysql.es.template.update",
				"title": "Update Template"
			},
			{
				"command": "mysql.es.template.analyze",
				"title": "Analyze Tokens"
			},
			{
				"command": "mysql.es.index.showSettings",
				"title": "%command.es.index.showSettings%"
			},
			{
				"command": "mysql.es.index.mapping",
				"title": "%command.es.index.mapping%"
			},
			{
				"command": "mysql.es.index.delete",
				"title": "%command.es.index.delete%"
			},
			{
				"command": "mysql.es.import",
				"title": "%command.data.import%"
			},
			{
				"command": "mysql.mq.consume",
				"title": "%command.mq.consume%",
				"icon": "$(call-incoming)"
			},
			{
				"command": "mysql.mq.produce",
				"title": "%command.mq.produce%",
				"icon": "$(debug-start)"
			},
			{
				"command": "mysql.kafka.topic.new",
				"title": "%command.kafka.topic.new%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.kafka.topic.delete",
				"title": "%command.node.delete%",
				"icon": "$(trash)"
			},
			{
				"command": "mysql.kafka.consumer.delete",
				"title": "%command.node.delete%",
				"icon": "$(trash)"
			},
			{
				"command": "mysql.kafka.offset.setOffset",
				"title": "%command.kafka.offset.setOffset%"
			},
			{
				"command": "mysql.kafka.offset.resetOffset",
				"title": "%command.kafka.offset.resetOffset%"
			},
			{
				"command": "mysql.mongo.collection.insert",
				"title": "%command.template.table.insert%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.mongo.collection.delete",
				"title": "%command.mongo.collection.delete%"
			},
			{
				"command": "mysql.connection.neo4j.browser",
				"title": "%command.connection.neo4j.browser%",
				"icon": "$(browser)"
			},
			{
				"command": "mysql.rabbit.queue.new",
				"title": "%command.rabbit.queue.new%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.rabbit.queue.delete",
				"title": "%command.node.delete%",
				"icon": "$(trash)"
			},
			{
				"command": "mysql.redis.connection.status",
				"title": "%command.redis.connection.status%"
			},
			{
				"command": "mysql.redis.key.detail",
				"title": "%command.redis.key.detail%",
				"icon": "$(three-bars)"
			},
			{
				"command": "mysql.redis.key.new",
				"title": "%command.redis.key.new%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.redis.key.del",
				"title": "%command.redis.key.del%",
				"icon": "$(trash)"
			},
			{
				"command": "mysql.zk.node.new",
				"title": "New Node",
				"icon": "$(add)"
			},
			{
				"command": "mysql.zk.node.delete",
				"title": "Delete Node",
				"icon": "$(trash)"
			},
			{
				"command": "mysql.zk.node.edit",
				"title": "Edit",
				"icon": "$(edit)"
			},
			{
				"command": "mysql.docker.compose.run",
				"title": "Run Compose"
			},
			{
				"command": "mysql.docker.node.drop",
				"title": "Delete",
				"icon": "$(close)"
			},
			{
				"command": "mysql.docker.container.new",
				"title": "New Docker Compose Template",
				"icon": "$(add)"
			},
			{
				"command": "mysql.docker.container.id.copy",
				"title": "Copy Container ID"
			},
			{
				"command": "mysql.docker.container.open.ports",
				"title": "Open In Browser"
			},
			{
				"command": "mysql.docker.container.cleanUp",
				"title": "Clean Up",
				"icon": "$(clear-all)"
			},
			{
				"command": "mysql.docker.container.restart",
				"title": "Restart"
			},
			{
				"command": "mysql.docker.container.start",
				"title": "Start",
				"icon": "$(debug-start)"
			},
			{
				"command": "mysql.docker.container.stop",
				"title": "Stop",
				"icon": "$(debug-stop)"
			},
			{
				"command": "mysql.docker.container.pause",
				"title": "Pause",
				"icon": "$(debug-pause)"
			},
			{
				"command": "mysql.docker.container.unpause",
				"title": "Unpause"
			},
			{
				"command": "mysql.docker.container.inspect",
				"title": "Inspect Container",
				"icon": "$(file-text)"
			},
			{
				"command": "mysql.docker.container.showLogs",
				"title": "Show Logs",
				"icon": "$(file-text)"
			},
			{
				"command": "mysql.docker.container.showStats",
				"title": "Show Stats",
				"icon": "$(graph-line)"
			},
			{
				"command": "mysql.docker.container.terminal",
				"title": "Open Terminal",
				"icon": "$(terminal)"
			},
			{
				"command": "mysql.docker.image.new",
				"title": "New",
				"icon": "$(add)"
			},
			{
				"command": "mysql.docker.image.cleanUp",
				"title": "Clean Up",
				"icon": "$(clear-all)"
			},
			{
				"command": "mysql.docker.image.run",
				"title": "Run",
				"icon": "$(play)"
			},
			{
				"command": "mysql.docker.image.runDetach",
				"title": "Run (Background)",
				"icon": "$(play)"
			},
			{
				"command": "mysql.docker.image.pull",
				"title": "Pull Latest"
			},
			{
				"command": "mysql.docker.image.id.copy",
				"title": "Copy Image ID"
			},
			{
				"command": "mysql.docker.image.document",
				"title": "View On Docker Hub",
				"icon": "$(layout-menubar)"
			},
			{
				"command": "mysql.docker.network.new",
				"title": "New Network",
				"icon": "$(add)"
			},
			{
				"command": "mysql.docker.network.cleanUp",
				"title": "Clean Up",
				"icon": "$(clear-all)"
			},
			{
				"command": "mysql.docker.volume.new",
				"title": "New Volume",
				"icon": "$(add)"
			},
			{
				"command": "mysql.docker.volume.cleanUp",
				"title": "Clean Up",
				"icon": "$(clear-all)"
			},
			{
				"command": "mysql.ssh.forward.port",
				"title": "%command.ssh.forward.port%",
				"icon": "$(server)"
			},
			{
				"command": "mysql.ssh.user.new",
				"title": "%command.ssh.user.new%",
				"icon": "$(add)"
			},
			{
				"command": "mysql.ssh.user.delete",
				"title": "%command.ssh.user.delete%",
				"icon": "$(trash)"
			},
			{
				"command": "mysql.ssh.user.updatePassword",
				"title": "%command.ssh.user.updatePassword%",
				"icon": "$(edit)"
			},
			{
				"command": "mysql.ssh.user.uploadPublicKey",
				"title": "%command.ssh.user.uploadPublicKey%",
				"icon": "$(cloud-upload)"
			},
			{
				"command": "mysql.ssh.folder.terminal",
				"title": "%command.ssh.folder.terminal%",
				"icon": "$(terminal)"
			},
			{
				"command": "mysql.ssh.server.status",
				"title": "%command.ssh.server.status%",
				"icon": "$(graph-line)"
			},
			{
				"command": "mysql.ssh.sh.execute",
				"title": "%command.ssh.sh.execute%",
				"icon": "$(play)"
			},
			{
				"command": "mysql.notebook.new",
				"title": "%command.notebook.new%",
				"category": "Database Client",
				"icon": "$(notebook)"
			},
			{
				"command": "mysql.notebook.open",
				"title": "%command.notebook.open%",
				"category": "Database Client",
				"icon": "$(notebook)"
			},
			{
				"command": "mysql.treeview.collapse",
				"title": "%command.treeview.collapse%",
				"category": "Database Client",
				"icon": "$(collapse-all)"
			},
			{
				"command": "mysql.treeview.nosql.collapse",
				"title": "%command.treeview.collapse%",
				"category": "Database Client",
				"icon": "$(collapse-all)"
			},
			{
				"command": "mysql.history.open",
				"title": "%command.history.open%",
				"category": "Database Client",
				"icon": "$(history)"
			}
		],
		"menus": {
			"editor/context": [
				{
					"command": "mysql.runSQL",
					"when": "editorLangId == sql",
					"group": "navigation@-2"
				},
				{
					"command": "mysql.runAllQuery",
					"when": "editorLangId == sql",
					"group": "navigation@1"
				},
				{
					"command": "mysql.db.active",
					"when": "editorLangId == sql",
					"group": "navigation@2"
				}
			],
			"editor/title": [
				{
					"command": "mysql.runSQL",
					"when": "editorLangId == sql || resourceFilename =~ /.sql$/ ",
					"group": "navigation"
				}
			],
			"view/title": [
				{
					"command": "mysql.connection.add",
					"when": "view =~ /cweijan.+?ql/",
					"group": "navigation@8"
				},
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/",
					"group": "navigation@2"
				},
				{
					"command": "mysql.console.open",
					"when": "view =~ /cweijan.+?ql/",
					"group": "navigation@-3"
				},
				{
					"command": "mysql.history.open",
					"when": "view == github.cweijan.mysql",
					"group": "navigation@1"
				},
				{
					"command": "mysql.treeview.collapse",
					"when": "view == github.cweijan.mysql",
					"group": "navigation@6"
				},
				{
					"command": "mysql.treeview.nosql.collapse",
					"when": "view == github.cweijan.nosql",
					"group": "navigation@6"
				}
			],
			"view/item/context": [
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(?<!(tree|subTable|rdp))(group|sshFolder|sshFavoriteFolder|link|folder|redisDB|favorite|ftpConnection|connection|redisConnection|esIndex)$/i",
					"group": "inline@-10"
				},
				{
					"command": "mysql.query.switch",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(schema|database|esConnection|esIndex|mongoCollection)$/",
					"group": "inline@5"
				},
				{
					"command": "mysql.server.info",
					"when": "view =~ /cweijan.+?ql/ && viewItem == connection",
					"group": "4_mysql@1"
				},
				{
					"command": "mysql.node.filterChildren",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(tableGroup|viewGroup|neo4jNodeGroup|neo4jRelationGroup|redisDB)$/i",
					"group": "inline@-8"
				},
				{
					"command": "mysql.name.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(schema|user|database|esColumn|column|table|view|esIndex|info|procedure|package|function|trigger|mongoCollection|redisKey|neo4jLabel|neo4jRelation|folder|s3Folder|file|s3File|sshUser)$/",
					"group": "-1_mysql@-5"
				},
				{
					"command": "mysql.notebook.sql",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(table|view|neo4jLabel|neo4jRelation)$/ && false",
					"group": "inline@4"
				},
				{
					"command": "mysql.template.sql",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(table|view)$/",
					"group": "inline@5"
				},
				{
					"command": "mysql.view.source",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(view)$/",
					"group": "1_inline@2"
				},
				{
					"command": "mysql.connection.edit",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /connection$/i",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.connection.disable",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /connection$/i",
					"group": "1_mysql@4"
				},
				{
					"command": "mysql.host.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /connection$/i",
					"group": "2_mysql@6"
				},
				{
					"command": "mysql.connection.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /connection$/i",
					"group": "2_mysql@8"
				},
				{
					"command": "mysql.connection.delete",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /connection$/i",
					"group": "inline@0"
				},
				{
					"command": "mysql.connection.terminal",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(?<!(ftp|rdp|neo4j|s3|es|zookeeper|common))(database|connection|redisDB)$/i",
					"group": "inline@6"
				},
				{
					"command": "mysql.connection.startRdp",
					"when": "view =~ /cweijan.+?ql/ && viewItem == rdpConnection",
					"group": "inline@2"
				},
				{
					"command": "mysql.connection.selectDb",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(database|connection)$/i",
					"group": "inline@8"
				},
				{
					"command": "mysql.connection.copyKey",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /connection$/i",
					"group": "9_mysql@4"
				},
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/ && viewItem == database",
					"group": "3_mysql@0"
				},
				{
					"command": "mysql.table.fullTextSearch",
					"when": "view =~ /cweijan.+?ql/ && viewItem == database",
					"group": "3_mysql@3"
				},
				{
					"command": "mysql.table.fullTextSearch",
					"when": "view =~ /cweijan.+?ql/ && viewItem == database",
					"group": "inline@-5"
				},
				{
					"command": "mysql.table.fullTextSearch",
					"when": "view =~ /cweijan.+?ql/ && viewItem == schema",
					"group": "4_mysql@7"
				},
				{
					"command": "mysql.table.fullTextSearch",
					"when": "view =~ /cweijan.+?ql/ && viewItem == schema",
					"group": "inline@-5"
				},
				{
					"command": "mysql.db.truncate",
					"when": "view =~ /cweijan.+?ql/ && viewItem == database",
					"group": "4_mysql@6"
				},
				{
					"command": "mysql.db.drop",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(database|schema)/",
					"group": "4_mysql@5"
				},
				{
					"command": "mysql.database.add",
					"when": "view =~ /cweijan.+?ql/ && viewItem == connection",
					"group": "inline@0"
				},
				{
					"command": "mysql.document.generate",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(database|schema)/",
					"group": "mysql@8"
				},
				{
					"command": "mysql.package.drop",
					"when": "view =~ /cweijan.+?ql/ && viewItem == package",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.node.create",
					"when": "view =~ /cweijan.+?ql/ && viewItem == packageGroup",
					"group": "inline@0"
				},
				{
					"command": "mysql.query.add",
					"when": "view =~ /cweijan.+?ql/ && viewItem == queryGroup",
					"group": "inline@0"
				},
				{
					"command": "mysql.query.book.add",
					"when": "view =~ /cweijan.+?ql/ && viewItem == queryGroup",
					"group": "inline@-1"
				},
				{
					"command": "mysql.query.rename",
					"when": "view =~ /cweijan.+?ql/ && viewItem == query",
					"group": "2_mysql@0"
				},
				{
					"command": "mysql.query.delete",
					"when": "view =~ /cweijan.+?ql/ && viewItem == query",
					"group": "2_mysql@0"
				},
				{
					"command": "mysql.query.rename",
					"when": "view =~ /cweijan.+?ql/ && viewItem == query",
					"group": "inline@-2"
				},
				{
					"command": "mysql.query.delete",
					"when": "view =~ /cweijan.+?ql/ && viewItem == query",
					"group": "inline@0"
				},
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/ && viewItem == procedureGroup",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.template.procedure",
					"when": "view =~ /cweijan.+?ql/ && viewItem == procedureGroup",
					"group": "inline"
				},
				{
					"command": "mysql.delete.procedure",
					"when": "view =~ /cweijan.+?ql/ && viewItem == procedure",
					"group": "2_mysql@1"
				},
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/ && viewItem == functionGroup",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.template.function",
					"when": "view =~ /cweijan.+?ql/ && viewItem == functionGroup",
					"group": "inline"
				},
				{
					"command": "mysql.delete.function",
					"when": "view =~ /cweijan.+?ql/ && viewItem == function",
					"group": "1_mysql@1"
				},
				{
					"command": "mysql.template.event.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem == eventGroup",
					"group": "inline"
				},
				{
					"command": "mysql.delete.event",
					"when": "view =~ /cweijan.+?ql/ && viewItem == event",
					"group": "1_mysql@1"
				},
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/ && viewItem == triggerGroup",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.template.trigger",
					"when": "view =~ /cweijan.+?ql/ && viewItem == triggerGroup",
					"group": "inline"
				},
				{
					"command": "mysql.delete.trigger",
					"when": "view =~ /cweijan.+?ql/ && viewItem == trigger",
					"group": "1_mysql@1"
				},
				{
					"command": "mysql.data.export",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(database|schema|redisDB|redisConnection|redisFolder)/",
					"group": "mysql@5"
				},
				{
					"command": "mysql.data.export",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(table|view)$/",
					"group": "1_inline1@2"
				},
				{
					"command": "mysql.struct.export",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(table|view)$/",
					"group": "1_inline1@3"
				},
				{
					"command": "mysql.struct.export",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(database|schema)/",
					"group": "mysql@6"
				},
				{
					"command": "mysql.data.import",
					"when": "view =~ /cweijan.+?ql/ && viewItem == connection",
					"group": "8_mysql@1"
				},
				{
					"command": "mysql.data.import",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(database|schema)/",
					"group": "mysql@7"
				},
				{
					"command": "mysql.redis.import",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(redisDB|redisConnection)/",
					"group": "mysql@8"
				},
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/ && viewItem == tableGroup",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.table.fullTextSearch",
					"when": "view =~ /cweijan.+?ql/ && viewItem == tableGroup",
					"group": "1_mysql@4"
				},
				{
					"command": "mysql.table.fullTextSearch",
					"when": "view =~ /cweijan.+?ql/ && viewItem == tableGroup",
					"group": "inline@-6"
				},
				{
					"submenu": "mysql.template.sql.table",
					"when": "view =~ /cweijan.+?ql/ && viewItem == table",
					"group": "1_inline1@0"
				},
				{
					"command": "mysql.mock.table",
					"when": "view =~ /cweijan.+?ql/ && viewItem == table",
					"group": "1_inline1@6"
				},
				{
					"command": "mysql.template.table",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(tableGroup|subTableGroup|neo4jNodeGroup)$/",
					"group": "inline"
				},
				{
					"command": "mysql.table.show",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(table|view|neo4jRelation|neo4jLabel|esIndex|mongoCollection)$/",
					"group": "inline@3"
				},
				{
					"command": "mysql.table.drop",
					"when": "view =~ /cweijan.+?ql/ && viewItem == table && false",
					"group": "inline@1"
				},
				{
					"command": "mysql.table.design",
					"when": "view =~ /cweijan.+?ql/ && viewItem == table",
					"group": "1_inline@0"
				},
				{
					"command": "mysql.table.design",
					"when": "view =~ /cweijan.+?ql/ && viewItem == table",
					"group": "inline@-4"
				},
				{
					"command": "mysql.table.source",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(table)$/",
					"group": "1_inline@2"
				},
				{
					"command": "mysql.table.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(table)$/",
					"group": "2_mysql@4"
				},
				{
					"command": "mysql.table.truncate",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(table)$/",
					"group": "2_mysql@6"
				},
				{
					"command": "mysql.table.drop",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(table|neo4jLabel|neo4jRelation)$/",
					"group": "2_mysql@2"
				},
				{
					"command": "mysql.table.sort",
					"when": "view =~ /cweijan.+?ql/ && viewItem == tableGroup",
					"group": "inline"
				},
				{
					"command": "mysql.column.createIndex",
					"when": "view =~ /cweijan.+?ql/ && viewItem == indexGroup",
					"group": "inline@-1"
				},
				{
					"command": "mysql.column.add",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(columnGroup|column)$/",
					"group": "inline@-1"
				},
				{
					"command": "mysql.column.add",
					"when": "view =~ /cweijan.+?ql/ && viewItem == column",
					"group": "1_inline@6"
				},
				{
					"command": "mysql.column.up",
					"when": "view =~ /cweijan.+?ql/ && viewItem == column",
					"group": "inline@0"
				},
				{
					"command": "mysql.column.down",
					"when": "view =~ /cweijan.+?ql/ && viewItem == column",
					"group": "inline@2"
				},
				{
					"command": "mysql.column.createIndex",
					"when": "view =~ /cweijan.+?ql/ && viewItem == column",
					"group": "3_mysql@1"
				},
				{
					"command": "mysql.column.drop",
					"when": "view =~ /cweijan.+?ql/ && viewItem == column",
					"group": "3_mysql@4"
				},
				{
					"command": "mysql.index.drop",
					"when": "view =~ /cweijan.+?ql/ && viewItem == index",
					"group": "3_mysql@4"
				},
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/ && viewItem == viewGroup",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.template.view",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(neo4jRelationGroup|viewGroup)$/",
					"group": "inline"
				},
				{
					"command": "mysql.delete.view",
					"when": "view =~ /cweijan.+?ql/ && viewItem == view",
					"group": "1_mysql@1"
				},
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/ && viewItem == userGroup",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.user.grant",
					"when": "view =~ /cweijan.+?ql/ && viewItem == user",
					"group": "1_mysql@0"
				},
				{
					"command": "mysql.template.user",
					"when": "view =~ /cweijan.+?ql/ && viewItem == userGroup",
					"group": "1_mysql@1"
				},
				{
					"command": "mysql.template.user",
					"when": "view =~ /cweijan.+?ql/ && viewItem == userGroup",
					"group": "inline"
				},
				{
					"command": "mysql.change.user",
					"when": "view =~ /cweijan.+?ql/ && viewItem == user",
					"group": "1_mysql@-1"
				},
				{
					"command": "mysql.delete.user",
					"when": "view =~ /cweijan.+?ql/ && viewItem == user",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.s3.selectBuckets",
					"when": "view == github.cweijan.nosql && viewItem == s3Connection",
					"group": "inline@2"
				},
				{
					"command": "mysql.file.delete",
					"when": "view == github.cweijan.nosql && viewItem =~ /(folder|file|s3Folder|s3File)/",
					"group": "1_change@2"
				},
				{
					"command": "mysql.s3.url.temp",
					"when": "view == github.cweijan.nosql && viewItem =~ /(s3File)/",
					"group": "-1_mysql@1"
				},
				{
					"command": "mysql.s3.url.public",
					"when": "view == github.cweijan.nosql && viewItem =~ /(s3File)/",
					"group": "-1_mysql@2"
				},
				{
					"command": "mysql.file.new",
					"when": "view == github.cweijan.nosql && viewItem =~ /(sshConnection|ftpConnection)/",
					"group": "2_connection@2"
				},
				{
					"command": "mysql.file.new",
					"when": "view == github.cweijan.nosql && viewItem =~ /(folder|s3Folder)/",
					"group": "0_change@0"
				},
				{
					"command": "mysql.file.upload",
					"when": "view == github.cweijan.nosql && viewItem =~ /(folder|s3Folder)/",
					"group": "inline@-2"
				},
				{
					"command": "mysql.file.upload",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(folder|s3Folder)$/",
					"group": "3_transfer@4"
				},
				{
					"command": "mysql.folder.upload",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(folder|s3Folder)$/",
					"group": "3_transfer@6"
				},
				{
					"command": "mysql.folder.new",
					"when": "view == github.cweijan.nosql && viewItem =~ /(sshConnection|ftpConnection)/",
					"group": "2_connection@4"
				},
				{
					"command": "mysql.bucket.new",
					"when": "view == github.cweijan.nosql && viewItem == s3Connection",
					"group": "2_connection@4"
				},
				{
					"command": "mysql.folder.new",
					"when": "view == github.cweijan.nosql && viewItem =~ /(folder|s3Folder)/",
					"group": "0_change@4"
				},
				{
					"command": "mysql.path.copy",
					"when": "view == github.cweijan.nosql && viewItem =~ /(file|link)/",
					"group": "-1_mysql@-10"
				},
				{
					"command": "mysql.file.download",
					"when": "view == github.cweijan.nosql && viewItem =~ /(folder|file|s3Folder|s3File)/",
					"group": "3_transfer@2"
				},
				{
					"command": "mysql.file.download",
					"when": "view == github.cweijan.nosql && viewItem =~ /(folder|file|s3Folder|s3File)/",
					"group": "inline@1"
				},
				{
					"command": "mysql.s3.openSite",
					"when": "view == github.cweijan.nosql && viewItem == s3Connection",
					"group": "2_connection@7"
				},
				{
					"command": "mysql.node.rename",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(folder|file|treeGroup|s3Folder|s3File)$/",
					"group": "1_change@6"
				},
				{
					"command": "mysql.node.rename",
					"when": "view =~ /cweijan.+?ql/ && viewItem == treeGroup",
					"group": "inline@-3"
				},
				{
					"command": "mysql.connection.add",
					"when": "view =~ /cweijan.+?ql/ && viewItem == treeGroup",
					"group": "inline@-2"
				},
				{
					"command": "mysql.node.favorite.clear",
					"when": "view =~ /cweijan.+?ql/ && viewItem == favorite",
					"group": "menu@-2"
				},
				{
					"command": "mysql.node.favorite.clear",
					"when": "view =~ /cweijan.+?ql/ && viewItem == favorite",
					"group": "inline@3"
				},
				{
					"command": "mysql.node.favorite",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(sshFolder|sshFile|link|sshFileShell)$/",
					"group": "inline@-1"
				},
				{
					"command": "mysql.node.favorite.cancel",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(sshFavoriteFolder|sshFavoriteFile|linkFavorite|sshFavoriteFileShell)$/",
					"group": "inline@-1"
				},
				{
					"command": "mysql.es.stream.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem == esStreamGroup",
					"group": "inline"
				},
				{
					"command": "mysql.es.index.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem == esIndexGroup",
					"group": "inline"
				},
				{
					"command": "mysql.es.template.search",
					"when": "view =~ /cweijan.+?ql/ && viewItem == esIndex",
					"group": "2_template@1"
				},
				{
					"command": "mysql.es.template.insert",
					"when": "view =~ /cweijan.+?ql/ && viewItem == esIndex",
					"group": "2_template@4"
				},
				{
					"command": "mysql.es.template.update",
					"when": "view =~ /cweijan.+?ql/ && viewItem == esIndex",
					"group": "2_template@7"
				},
				{
					"command": "mysql.es.template.analyze",
					"when": "view =~ /cweijan.+?ql/ && viewItem == esIndex",
					"group": "2_template@9"
				},
				{
					"command": "mysql.data.export",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(esConnection|esIndexGroup|esIndex)$/",
					"group": "3_dump@2"
				},
				{
					"command": "mysql.struct.export",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(esConnection|esIndexGroup|esIndex)$/",
					"group": "3_dump@3"
				},
				{
					"command": "mysql.es.import",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(esConnection|esIndexGroup)$/",
					"group": "mysql@7"
				},
				{
					"command": "mysql.es.index.showSettings",
					"when": "view =~ /cweijan.+?ql/ && viewItem == esIndex",
					"group": "3_mysql@1"
				},
				{
					"command": "mysql.es.index.mapping",
					"when": "view =~ /cweijan.+?ql/ && viewItem == esIndex",
					"group": "3_mysql@2"
				},
				{
					"command": "mysql.es.index.delete",
					"when": "view =~ /cweijan.+?ql/ && viewItem == esIndex",
					"group": "3_mysql@3"
				},
				{
					"command": "mysql.mq.produce",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(kafkaTopic|rabbitQueue)$/",
					"group": "inline@4"
				},
				{
					"command": "mysql.mq.consume",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(kafkaTopic|rabbitQueue)$/",
					"group": "inline@3"
				},
				{
					"command": "mysql2.refresh",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(kafkaBroker|kafkaTopic)$/",
					"group": "inline@-2"
				},
				{
					"command": "mysql.name.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(kafkaBroker|kafkaTopic|kafkaConsumerGroup|kafkaConsumer)$/",
					"group": "menu@1"
				},
				{
					"command": "mysql.kafka.topic.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem == kafkaTopicGroup",
					"group": "inline@-2"
				},
				{
					"command": "mysql.kafka.topic.delete",
					"when": "view =~ /cweijan.+?ql/ && viewItem == kafkaTopic",
					"group": "inline@0"
				},
				{
					"command": "mysql.kafka.consumer.delete",
					"when": "view =~ /cweijan.+?ql/ && viewItem == kafkaConsumerGroup",
					"group": "inline@-2"
				},
				{
					"command": "mysql.kafka.offset.setOffset",
					"when": "view =~ /cweijan.+?ql/ && viewItem == kafkaOffset",
					"group": "menu@3"
				},
				{
					"command": "mysql.kafka.offset.resetOffset",
					"when": "view =~ /cweijan.+?ql/ && viewItem == kafkaOffset",
					"group": "menu@6"
				},
				{
					"command": "mysql.mongo.collection.insert",
					"when": "view =~ /cweijan.+?ql/ && viewItem == mongoCollection",
					"group": "inline@4"
				},
				{
					"command": "mysql.mongo.collection.insert",
					"when": "view =~ /cweijan.+?ql/ && viewItem == mongoCollection",
					"group": "1_mysql@2"
				},
				{
					"command": "mysql.mongo.collection.delete",
					"when": "view =~ /cweijan.+?ql/ && viewItem == mongoCollection",
					"group": "1_mysql@6"
				},
				{
					"command": "mysql.connection.neo4j.browser",
					"when": "view =~ /cweijan.+?ql/ && viewItem == neo4jConnection",
					"group": "10mysql@0"
				},
				{
					"command": "mysql.connection.neo4j.browser",
					"when": "view =~ /cweijan.+?ql/ && viewItem == neo4jConnection",
					"group": "inline@2"
				},
				{
					"command": "mysql.template.table.select",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(neo4jLabel|neo4jRelation)$/",
					"group": "inline@5"
				},
				{
					"command": "mysql.name.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem == rabbitQueue",
					"group": "menu@1"
				},
				{
					"command": "mysql.rabbit.queue.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem == rabbitQueueGroup",
					"group": "inline@-2"
				},
				{
					"command": "mysql.rabbit.queue.delete",
					"when": "view =~ /cweijan.+?ql/ && viewItem == rabbitQueue",
					"group": "inline@0"
				},
				{
					"command": "mysql.redis.connection.status",
					"when": "view == github.cweijan.nosql && viewItem == redisConnection",
					"group": "connection"
				},
				{
					"command": "mysql.redis.key.new",
					"when": "view == github.cweijan.nosql && viewItem =~ /^(redisDB|redisFolder)$/",
					"group": "inline"
				},
				{
					"command": "mysql.redis.key.del",
					"when": "view == github.cweijan.nosql && viewItem =~ /^(redisKey|redisFolder)$/",
					"group": "inline"
				},
				{
					"command": "mysql.redis.key.detail",
					"when": "view == github.cweijan.nosql && viewItem =~ /redisKey/",
					"group": "inline@-4"
				},
				{
					"command": "mysql.redis.key.del",
					"when": "view == github.cweijan.nosql && viewItem =~ /^(redisKey|redisFolder)$/",
					"group": "mysql"
				},
				{
					"command": "mysql.zk.node.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /zookeeperFolder|zookeeperConnection/",
					"group": "inline@6"
				},
				{
					"command": "mysql.zk.node.edit",
					"when": "view =~ /cweijan.+?ql/ && viewItem == zookeeperFolder",
					"group": "inline@4"
				},
				{
					"command": "mysql.zk.node.delete",
					"when": "view =~ /cweijan.+?ql/ && viewItem == zookeeperFolder",
					"group": "inline@2"
				},
				{
					"command": "mysql.name.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(dockerNetwork|dockerVolume)$/",
					"group": "menu@1"
				},
				{
					"command": "mysql.docker.node.drop",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /^(dockerImage|dockerNetwork|dockerVolume|dockerContainerStopped|dockerContainerRunning|dockerContainerPaused)$/",
					"group": "menu@3"
				},
				{
					"command": "mysql.docker.container.cleanUp",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerGroup",
					"group": "menu@2"
				},
				{
					"command": "mysql.docker.container.cleanUp",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerGroup",
					"group": "inline@-4"
				},
				{
					"command": "mysql.docker.container.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerGroup",
					"group": "inline@6"
				},
				{
					"command": "mysql.docker.container.showStats",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerConnection",
					"group": "inline@1.1"
				},
				{
					"command": "mysql.docker.container.start",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerStopped",
					"group": "menu@1"
				},
				{
					"command": "mysql.docker.container.start",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerStopped",
					"group": "inline"
				},
				{
					"command": "mysql.docker.node.drop",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerStopped",
					"group": "inline@3"
				},
				{
					"command": "mysql.docker.container.restart",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(dockerContainerRunning|dockerContainerPaused)/",
					"group": "menu@2"
				},
				{
					"command": "mysql.docker.container.unpause",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerPaused",
					"group": "menu@1"
				},
				{
					"command": "mysql.docker.container.open.ports",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /dockerContainer/ && viewItem != dockerContainerGroup",
					"group": "a_menu@-1"
				},
				{
					"command": "mysql.docker.container.id.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /dockerContainer/ && viewItem != dockerContainerGroup",
					"group": "a_menu@1"
				},
				{
					"command": "mysql.docker.container.pause",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerRunning",
					"group": "inline@-3"
				},
				{
					"command": "mysql.docker.container.stop",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerRunning",
					"group": "inline@-1"
				},
				{
					"command": "mysql.docker.container.terminal",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerContainerRunning",
					"group": "inline@2"
				},
				{
					"command": "mysql.docker.container.showLogs",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /dockerContainer/ && viewItem != dockerContainerGroup",
					"group": "z_menu@6"
				},
				{
					"command": "mysql.docker.container.inspect",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /dockerContainer/ && viewItem != dockerContainerGroup",
					"group": "z_menu@8"
				},
				{
					"command": "mysql.docker.image.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImageGroup",
					"group": "inline"
				},
				{
					"command": "mysql.docker.image.cleanUp",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImageGroup",
					"group": "menu@2"
				},
				{
					"command": "mysql.docker.image.cleanUp",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImageGroup",
					"group": "inline@-4"
				},
				{
					"command": "mysql.docker.image.run",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImage",
					"group": "a_menu@1"
				},
				{
					"command": "mysql.docker.image.runDetach",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImage",
					"group": "inline"
				},
				{
					"command": "mysql.docker.image.runDetach",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImage",
					"group": "a_menu@3"
				},
				{
					"command": "mysql.docker.image.pull",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImage",
					"group": "a_menu@7"
				},
				{
					"command": "mysql.name.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImage",
					"group": "menu@50"
				},
				{
					"command": "mysql.docker.image.id.copy",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImage",
					"group": "menu@100"
				},
				{
					"command": "mysql.docker.image.document",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerImage",
					"group": "inline"
				},
				{
					"command": "mysql.file.download",
					"when": "view == github.cweijan.nosql && viewItem == dockerFolder",
					"group": "inline@3"
				},
				{
					"command": "mysql.path.copy",
					"when": "view == github.cweijan.nosql && viewItem == dockerFolder",
					"group": "-1_mysql@-10"
				},
				{
					"command": "mysql.file.download",
					"when": "view == github.cweijan.nosql && viewItem == dockerFolder",
					"group": "3_transfer@2"
				},
				{
					"command": "mysql.file.delete",
					"when": "view == github.cweijan.nosql && viewItem == dockerFolder",
					"group": "1_change@2"
				},
				{
					"command": "mysql.node.rename",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerFolder",
					"group": "1_change@6"
				},
				{
					"command": "mysql.file.upload",
					"when": "view == github.cweijan.nosql && viewItem == dockerFolder",
					"group": "inline@2"
				},
				{
					"command": "mysql.ssh.folder.terminal",
					"when": "view == github.cweijan.nosql && viewItem == dockerFolder",
					"group": "inline@10"
				},
				{
					"command": "mysql.file.new",
					"when": "view == github.cweijan.nosql && viewItem == dockerFolder",
					"group": "0_change@0"
				},
				{
					"command": "mysql.folder.new",
					"when": "view == github.cweijan.nosql && viewItem == dockerFolder",
					"group": "0_change@4"
				},
				{
					"command": "mysql.file.upload",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerFolder",
					"group": "3_transfer@4"
				},
				{
					"command": "mysql.folder.upload",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerFolder",
					"group": "3_transfer@6"
				},
				{
					"command": "mysql.ssh.folder.terminal",
					"when": "view == github.cweijan.nosql && viewItem == dockerFolder",
					"group": "ssh@2"
				},
				{
					"command": "mysql.docker.network.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerNetworkGroup",
					"group": "inline"
				},
				{
					"command": "mysql.docker.network.cleanUp",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerNetworkGroup",
					"group": "menu@0"
				},
				{
					"command": "mysql.docker.network.cleanUp",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerNetworkGroup",
					"group": "inline@-4"
				},
				{
					"command": "mysql.docker.volume.new",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerVolumeGroup",
					"group": "inline"
				},
				{
					"command": "mysql.docker.volume.cleanUp",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerVolumeGroup",
					"group": "menu@0"
				},
				{
					"command": "mysql.docker.volume.cleanUp",
					"when": "view =~ /cweijan.+?ql/ && viewItem == dockerVolumeGroup",
					"group": "inline@-4"
				},
				{
					"command": "mysql2.refresh",
					"when": "view == github.cweijan.nosql && viewItem == sshConnection",
					"group": "1_nosql@0"
				},
				{
					"command": "mysql.ssh.forward.port",
					"when": "view == github.cweijan.nosql && viewItem == sshConnection",
					"group": "1_nosql@2"
				},
				{
					"command": "mysql.ssh.forward.port",
					"when": "view == github.cweijan.nosql && viewItem == sshConnection",
					"group": "inline@4"
				},
				{
					"command": "mysql.ssh.server.status",
					"when": "view == github.cweijan.nosql && viewItem == sshConnection",
					"group": "inline@2"
				},
				{
					"command": "mysql.file.download",
					"when": "view == github.cweijan.nosql && viewItem =~ /(sshFavoriteFolder|sshFolder|sshFile|sshFavoriteFile)/",
					"group": "inline@3"
				},
				{
					"command": "mysql.path.copy",
					"when": "view == github.cweijan.nosql && viewItem =~ /(sshFolder|sshFavoriteFolder|sshFile|sshFavoriteFile)/",
					"group": "-1_mysql@-10"
				},
				{
					"command": "mysql.file.download",
					"when": "view == github.cweijan.nosql && viewItem =~ /(sshFolder|sshFavoriteFolder|sshFile|sshFavoriteFile)/",
					"group": "3_transfer@2"
				},
				{
					"command": "mysql.file.delete",
					"when": "view == github.cweijan.nosql && viewItem =~ /(sshFolder|sshFavoriteFolder|sshFile|sshFavoriteFile)/",
					"group": "1_change@2"
				},
				{
					"command": "mysql.node.rename",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(sshFolder|sshFavoriteFolder|sshFile|sshFavoriteFile)/",
					"group": "1_change@6"
				},
				{
					"command": "mysql.ssh.user.new",
					"when": "view == github.cweijan.nosql && viewItem == sshUserGroup",
					"group": "inline@5"
				},
				{
					"command": "mysql.ssh.user.delete",
					"when": "view == github.cweijan.nosql && viewItem == sshUser",
					"group": "inline@5"
				},
				{
					"command": "mysql.ssh.user.delete",
					"when": "view == github.cweijan.nosql && viewItem == sshUser",
					"group": "1_manager@5"
				},
				{
					"command": "mysql.ssh.user.updatePassword",
					"when": "view == github.cweijan.nosql && viewItem == sshUser",
					"group": "inline@3"
				},
				{
					"command": "mysql.ssh.user.uploadPublicKey",
					"when": "view == github.cweijan.nosql && viewItem == sshUser",
					"group": "inline@1"
				},
				{
					"command": "mysql.ssh.user.updatePassword",
					"when": "view == github.cweijan.nosql && viewItem == sshUser",
					"group": "0_menu@1"
				},
				{
					"command": "mysql.ssh.user.uploadPublicKey",
					"when": "view == github.cweijan.nosql && viewItem == sshUser",
					"group": "0_menu@3"
				},
				{
					"command": "mysql.file.upload",
					"when": "view == github.cweijan.nosql && viewItem =~ /sshFolder|sshFavoriteFolder/",
					"group": "inline@2"
				},
				{
					"command": "mysql.ssh.folder.terminal",
					"when": "view == github.cweijan.nosql && viewItem =~ /sshFolder|sshFavoriteFolder/",
					"group": "inline@10"
				},
				{
					"command": "mysql.file.new",
					"when": "view == github.cweijan.nosql && viewItem =~ /sshFolder|sshFavoriteFolder/",
					"group": "0_change@0"
				},
				{
					"command": "mysql.folder.new",
					"when": "view == github.cweijan.nosql && viewItem =~ /sshFolder|sshFavoriteFolder/",
					"group": "0_change@4"
				},
				{
					"command": "mysql.file.upload",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /sshFolder|sshFavoriteFolder/",
					"group": "3_transfer@4"
				},
				{
					"command": "mysql.folder.upload",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /sshFolder|sshFavoriteFolder/",
					"group": "3_transfer@6"
				},
				{
					"command": "mysql.ssh.folder.terminal",
					"when": "view == github.cweijan.nosql && viewItem =~ /sshFolder|sshFavoriteFolder/",
					"group": "ssh@2"
				},
				{
					"command": "mysql.ssh.sh.execute",
					"when": "view == github.cweijan.nosql && viewItem == sshFileShell",
					"group": "inline@5"
				},
				{
					"command": "mysql.history.open",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(database|schema)/",
					"group": "inline@-8"
				},
				{
					"command": "mysql.history.open",
					"when": "view =~ /cweijan.+?ql/ && viewItem =~ /(database|schema|connection)/",
					"group": "4_mysql@5"
				},
				{
					"command": "mysql.name.copy",
					"when": "view == github.dbclient.history && viewItem == sqlHistory",
					"group": "menu@1"
				}
			],
			"mysql.template.sql.table": [
				{
					"command": "mysql.template.table.select",
					"group": "template@1"
				},
				{
					"command": "mysql.template.table.insert",
					"group": "template@2"
				},
				{
					"command": "mysql.template.table.update",
					"group": "template@3"
				},
				{
					"command": "mysql.template.table.delete",
					"group": "template@4"
				}
			],
			"commandPalette": [
				{
					"command": "mysql.name.copy",
					"when": "false"
				},
				{
					"command": "mysql.server.info",
					"when": "false"
				},
				{
					"command": "mysql.node.create",
					"when": "false"
				},
				{
					"command": "mysql.runSQL",
					"when": "false"
				},
				{
					"command": "mysql.runAllQuery",
					"when": "false"
				},
				{
					"command": "mysql.template.sql",
					"when": "false"
				},
				{
					"command": "mysql.notebook.sql",
					"when": "false"
				},
				{
					"command": "mysql.node.filterChildren",
					"when": "false"
				},
				{
					"command": "mysql.host.copy",
					"when": "false"
				},
				{
					"command": "mysql.connection.edit",
					"when": "false"
				},
				{
					"command": "mysql.connection.copy",
					"when": "false"
				},
				{
					"command": "mysql.connection.disable",
					"when": "false"
				},
				{
					"command": "mysql.connection.delete",
					"when": "false"
				},
				{
					"command": "mysql.connection.terminal",
					"when": "false"
				},
				{
					"command": "mysql.connection.startRdp",
					"when": "false"
				},
				{
					"command": "mysql.connection.selectDb",
					"when": "false"
				},
				{
					"command": "mysql.connection.copyKey",
					"when": "false"
				},
				{
					"command": "mysql.db.truncate",
					"when": "false"
				},
				{
					"command": "mysql.database.add",
					"when": "false"
				},
				{
					"command": "mysql.db.drop",
					"when": "false"
				},
				{
					"command": "mysql.document.generate",
					"when": "false"
				},
				{
					"command": "mysql.package.source",
					"when": "false"
				},
				{
					"command": "mysql.package.drop",
					"when": "false"
				},
				{
					"command": "mysql.query.switch",
					"when": "false"
				},
				{
					"command": "mysql.query.add",
					"when": "false"
				},
				{
					"command": "mysql.query.book.add",
					"when": "false"
				},
				{
					"command": "mysql.query.rename",
					"when": "false"
				},
				{
					"command": "mysql.query.delete",
					"when": "false"
				},
				{
					"command": "mysql.template.procedure",
					"when": "false"
				},
				{
					"command": "mysql.delete.procedure",
					"when": "false"
				},
				{
					"command": "mysql.template.function",
					"when": "false"
				},
				{
					"command": "mysql.delete.function",
					"when": "false"
				},
				{
					"command": "mysql.delete.event",
					"when": "false"
				},
				{
					"command": "mysql.template.event.new",
					"when": "false"
				},
				{
					"command": "mysql.delete.trigger",
					"when": "false"
				},
				{
					"command": "mysql.template.trigger",
					"when": "false"
				},
				{
					"command": "mysql.data.export",
					"when": "false"
				},
				{
					"command": "mysql.struct.export",
					"when": "false"
				},
				{
					"command": "mysql.data.import",
					"when": "false"
				},
				{
					"command": "mysql.redis.import",
					"when": "false"
				},
				{
					"command": "mysql.mock.run",
					"when": "false"
				},
				{
					"command": "mysql.mock.table",
					"when": "false"
				},
				{
					"command": "mysql.template.table.select",
					"when": "false"
				},
				{
					"command": "mysql.template.table.insert",
					"when": "false"
				},
				{
					"command": "mysql.template.table.update",
					"when": "false"
				},
				{
					"command": "mysql.template.table.delete",
					"when": "false"
				},
				{
					"command": "mysql.template.table",
					"when": "false"
				},
				{
					"command": "mysql.table.copy",
					"when": "false"
				},
				{
					"command": "mysql.table.truncate",
					"when": "false"
				},
				{
					"command": "mysql.table.drop",
					"when": "false"
				},
				{
					"command": "mysql.table.sort",
					"when": "false"
				},
				{
					"command": "mysql.changeTableName",
					"when": "false"
				},
				{
					"command": "mysql.table.design",
					"when": "false"
				},
				{
					"command": "mysql.table.source",
					"when": "false"
				},
				{
					"command": "mysql.table.show",
					"when": "false"
				},
				{
					"command": "mysql.column.add",
					"when": "false"
				},
				{
					"command": "mysql.column.up",
					"when": "false"
				},
				{
					"command": "mysql.column.down",
					"when": "false"
				},
				{
					"command": "mysql.column.update",
					"when": "false"
				},
				{
					"command": "mysql.column.drop",
					"when": "false"
				},
				{
					"command": "mysql.column.createIndex",
					"when": "false"
				},
				{
					"command": "mysql.index.modify",
					"when": "false"
				},
				{
					"command": "mysql.index.drop",
					"when": "false"
				},
				{
					"command": "mysql.template.view",
					"when": "false"
				},
				{
					"command": "mysql.delete.view",
					"when": "false"
				},
				{
					"command": "mysql.view.source",
					"when": "false"
				},
				{
					"command": "mysql.user.grant",
					"when": "false"
				},
				{
					"command": "mysql.change.user",
					"when": "false"
				},
				{
					"command": "mysql.template.user",
					"when": "false"
				},
				{
					"command": "mysql.delete.user",
					"when": "false"
				},
				{
					"command": "mysql.s3.selectBuckets",
					"when": "false"
				},
				{
					"command": "mysql.file.delete",
					"when": "false"
				},
				{
					"command": "mysql.s3.url.temp",
					"when": "false"
				},
				{
					"command": "mysql.s3.url.public",
					"when": "false"
				},
				{
					"command": "mysql.s3.openSite",
					"when": "false"
				},
				{
					"command": "mysql.file.new",
					"when": "false"
				},
				{
					"command": "mysql.file.upload",
					"when": "false"
				},
				{
					"command": "mysql.folder.upload",
					"when": "false"
				},
				{
					"command": "mysql.folder.new",
					"when": "false"
				},
				{
					"command": "mysql.bucket.new",
					"when": "false"
				},
				{
					"command": "mysql.path.copy",
					"when": "false"
				},
				{
					"command": "mysql.file.download",
					"when": "false"
				},
				{
					"command": "mysql.node.rename",
					"when": "false"
				},
				{
					"command": "mysql.node.favorite",
					"when": "false"
				},
				{
					"command": "mysql.node.favorite.cancel",
					"when": "false"
				},
				{
					"command": "mysql.node.favorite.clear",
					"when": "false"
				},
				{
					"command": "mysql.es.stream.new",
					"when": "false"
				},
				{
					"command": "mysql.es.index.new",
					"when": "false"
				},
				{
					"command": "mysql.es.template.search",
					"when": "false"
				},
				{
					"command": "mysql.es.template.insert",
					"when": "false"
				},
				{
					"command": "mysql.es.template.update",
					"when": "false"
				},
				{
					"command": "mysql.es.template.analyze",
					"when": "false"
				},
				{
					"command": "mysql.es.index.showSettings",
					"when": "false"
				},
				{
					"command": "mysql.es.index.mapping",
					"when": "false"
				},
				{
					"command": "mysql.es.index.delete",
					"when": "false"
				},
				{
					"command": "mysql.es.import",
					"when": "false"
				},
				{
					"command": "mysql.kafka.topic.new",
					"when": "false"
				},
				{
					"command": "mysql.kafka.topic.delete",
					"when": "false"
				},
				{
					"command": "mysql.kafka.consumer.delete",
					"when": "false"
				},
				{
					"command": "mysql.kafka.offset.setOffset",
					"when": "false"
				},
				{
					"command": "mysql.kafka.offset.resetOffset",
					"when": "false"
				},
				{
					"command": "mysql.mongo.collection.insert",
					"when": "false"
				},
				{
					"command": "mysql.mongo.collection.delete",
					"when": "false"
				},
				{
					"command": "mysql.connection.neo4j.browser",
					"when": "false"
				},
				{
					"command": "mysql.rabbit.queue.new",
					"when": "false"
				},
				{
					"command": "mysql.rabbit.queue.delete",
					"when": "false"
				},
				{
					"command": "mysql.redis.connection.status",
					"when": "false"
				},
				{
					"command": "mysql.redis.key.detail",
					"when": "false"
				},
				{
					"command": "mysql.redis.key.new",
					"when": "false"
				},
				{
					"command": "mysql.redis.key.del",
					"when": "false"
				},
				{
					"command": "mysql.zk.node.new",
					"when": "false"
				},
				{
					"command": "mysql.zk.node.delete",
					"when": "false"
				},
				{
					"command": "mysql.zk.node.edit",
					"when": "false"
				},
				{
					"command": "mysql.docker.compose.run",
					"when": "false"
				},
				{
					"command": "mysql.docker.node.drop",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.new",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.id.copy",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.open.ports",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.cleanUp",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.restart",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.start",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.stop",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.pause",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.unpause",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.showLogs",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.showStats",
					"when": "false"
				},
				{
					"command": "mysql.docker.container.terminal",
					"when": "false"
				},
				{
					"command": "mysql.docker.image.new",
					"when": "false"
				},
				{
					"command": "mysql.docker.image.cleanUp",
					"when": "false"
				},
				{
					"command": "mysql.docker.image.run",
					"when": "false"
				},
				{
					"command": "mysql.docker.image.runDetach",
					"when": "false"
				},
				{
					"command": "mysql.docker.image.pull",
					"when": "false"
				},
				{
					"command": "mysql.docker.image.id.copy",
					"when": "false"
				},
				{
					"command": "mysql.docker.image.document",
					"when": "false"
				},
				{
					"command": "mysql.docker.network.new",
					"when": "false"
				},
				{
					"command": "mysql.docker.network.cleanUp",
					"when": "false"
				},
				{
					"command": "mysql.docker.volume.new",
					"when": "false"
				},
				{
					"command": "mysql.docker.volume.cleanUp",
					"when": "false"
				},
				{
					"command": "mysql.ssh.forward.port",
					"when": "false"
				},
				{
					"command": "mysql.ssh.user.new",
					"when": "false"
				},
				{
					"command": "mysql.ssh.user.delete",
					"when": "false"
				},
				{
					"command": "mysql.ssh.user.updatePassword",
					"when": "false"
				},
				{
					"command": "mysql.ssh.user.uploadPublicKey",
					"when": "false"
				},
				{
					"command": "mysql.ssh.folder.terminal",
					"when": "false"
				},
				{
					"command": "mysql.ssh.server.status",
					"when": "false"
				},
				{
					"command": "mysql.ssh.sh.execute",
					"when": "false"
				},
				{
					"command": "mysql.treeview.nosql.collapse",
					"when": "false"
				}
			]
		},
		"submenus": [
			{
				"id": "mysql.template.sql.table",
				"label": "%command.sqlTemplate%"
			}
		],
		"configuration": {
			"type": "object",
			"title": "%config.title%",
			"properties": {
				"database-client.resultTheme": {
					"type": "string",
					"default": "default",
					"enum": [
						"default",
						"contrast"
					],
					"description": "%config.resultTheme%"
				},
				"database-client.resultRowHeight": {
					"type": "string",
					"default": "33px",
					"description": "%config.resultRowHeight%"
				},
				"database-client.maximumColumnWidth": {
					"type": "integer",
					"default": 180,
					"description": "%config.maximumColumnWidth%"
				},
				"database-client.reduceRowBorder": {
					"type": "boolean",
					"default": true,
					"description": "%config.reduceRowBorder%"
				},
				"database-client.defaultSelectLimit": {
					"type": "integer",
					"default": 100,
					"description": "%config.defaultSelectLimit%"
				},
				"database-client.redisPageSize": {
					"type": "integer",
					"default": 10000,
					"description": "%config.redisPageSize%"
				},
				"database-client.highlightSQLBlock": {
					"type": "boolean",
					"default": false,
					"description": "%config.highlightSQLBlock%"
				},
				"database-client.disableSqlCodeLenNew": {
					"type": "boolean",
					"default": false,
					"description": "%config.disableSqlCodeLenNew%"
				},
				"database-client.splitEditorWhenQuery": {
					"type": "boolean",
					"default": true,
					"description": "%config.splitEditorWhenQuery%"
				},
				"database-client.bindConnectionByActiveMark": {
					"type": "boolean",
					"default": true,
					"description": "%config.bindConnectionByActiveMark%"
				},
				"database-client.saveConnectionExpandedState": {
					"type": "boolean",
					"default": false,
					"description": "%config.saveConnectionExpandedState%"
				},
				"database-client.autoGetTableCount": {
					"type": "boolean",
					"default": true,
					"description": "%config.autoGetTableCount%"
				},
				"database-client.rightAlignNumericData": {
					"type": "boolean",
					"default": false,
					"description": "%config.rightAlignNumericData%"
				},
				"database-client.executeCursorSQLByShortcut": {
					"type": "boolean",
					"default": true,
					"description": "%config.executeCursorSQLByShortcut%"
				},
				"database-client.splitSQLByNewLine": {
					"type": "boolean",
					"default": true,
					"description": "%config.splitSQLByNewLine%"
				},
				"database-client.showUser": {
					"type": "boolean",
					"default": false,
					"description": "%config.showUser%"
				},
				"database-client.showProcedure": {
					"type": "boolean",
					"default": true,
					"description": "%config.showProcedure%"
				},
				"database-client.showFunction": {
					"type": "boolean",
					"default": true,
					"description": "%config.showFunction%"
				},
				"database-client.showTrigger": {
					"type": "boolean",
					"default": false,
					"description": "%config.showTrigger%"
				},
				"database-client.showForeignTable": {
					"type": "boolean",
					"default": false,
					"description": "%config.showForeignTable%"
				},
				"database-client.showEvent": {
					"type": "boolean",
					"default": false,
					"description": "%config.showEvent%"
				},
				"database-client.showSQLPanel": {
					"type": "string",
					"default": "auto(plus)",
					"enum": [
						"always",
						"auto",
						"auto(plus)",
						"never"
					],
					"description": "Show SQL Panel on result view"
				},
				"database-client.sshServerHostKey": {
					"type": "array",
					"default": [
						"ecdsa-sha2-nistp256",
						"ecdsa-sha2-nistp384",
						"ecdsa-sha2-nistp521",
						"rsa-sha2-512",
						"rsa-sha2-256",
						"ssh-rsa",
						"ssh-dss"
					],
					"description": "Connect to the serverHostKey supported by the ssh server."
				},
				"database-client.sshCipher": {
					"type": "array",
					"default": [
						"aes128-gcm@openssh.com",
						"aes256-gcm@openssh.com",
						"aes128-ctr",
						"aes192-ctr",
						"aes256-ctr"
					],
					"description": "Connect to the cipher supported by the ssh server."
				},
				"database-client.sshKex": {
					"type": "array",
					"default": [
						"ecdh-sha2-nistp256",
						"ecdh-sha2-nistp384",
						"ecdh-sha2-nistp521",
						"diffie-hellman-group-exchange-sha256",
						"diffie-hellman-group14-sha256",
						"diffie-hellman-group15-sha512",
						"diffie-hellman-group16-sha512",
						"diffie-hellman-group17-sha512",
						"diffie-hellman-group18-sha512",
						"diffie-hellman-group14-sha1",
						"diffie-hellman-group-exchange-sha1"
					],
					"description": "Connect to the kex supported by the ssh server."
				},
				"database-client.terminalTheme": {
					"type": "string",
					"default": "Auto",
					"enum": [
						"Auto",
						"Dracula",
						"OneDark",
						"Ubuntu",
						"Default"
					],
					"description": "Theme for terminal."
				},
				"database-client.completionTriggerKey": {
					"type": "array",
					"default": [
						" ",
						"@",
						"."
					],
					"description": "Which keys trigger completion"
				},
				"database-client.escapedAllObjectName": {
					"type": [
						"string",
						"boolean"
					],
					"default": false,
					"enum": [
						true,
						false,
						"never",
						"always",
						"auto"
					],
					"description": "%config.escapedAllObjectName%"
				},
				"database-client.reloadAfterDML": {
					"type": "boolean",
					"default": false,
					"description": "%config.reloadAfterDML%"
				},
				"database-client.autoSync": {
					"type": "boolean",
					"default": false,
					"description": "%config.autoSync%"
				},
				"database-client.showComments": {
					"type": "string",
					"default": "Chinese Only",
					"enum": [
						"Always",
						"Never",
						"Chinese Only"
					],
					"description": "%config.showComments%"
				},
				"database-client.terminalLocation": {
					"type": "string",
					"enum": [
						"Panel",
						"Editor"
					],
					"default": "Editor",
					"description": "%config.terminalLocation%"
				},
				"database-client.autoPagingSQL": {
					"type": "boolean",
					"default": true,
					"description": "%config.autoPagingSQL%"
				},
				"database-client.queryWithSchema": {
					"type": "boolean",
					"default": false,
					"description": "%config.queryWithSchema%"
				},
				"database-client.confirmWhenUpdateWithoutWhere": {
					"type": "boolean",
					"default": true,
					"description": "%config.confirmWhenUpdateWithoutWhere%"
				},
				"database-client.capitalizeKeywordsWhenFormatting": {
					"type": "boolean",
					"default": false,
					"description": "%config.capitalizeKeywordsWhenFormatting%"
				},
				"database-client.createResultViewForEachQuery": {
					"type": "boolean",
					"default": false,
					"description": "%config.createResultViewForEachQuery%"
				},
				"database-client.telemetry.usesOnlineServices": {
					"type": "boolean",
					"default": true,
					"description": "%config.telemetry.usesOnlineServices%"
				}
			}
		},
		"keybindings": [
			{
				"command": "mysql.runSQL",
				"key": "ctrl+enter",
				"mac": "cmd+enter",
				"when": "editorLangId == sql || editorLangId == dbclient-js || editorLangId == cql || editorLangId == postgres"
			},
			{
				"command": "mysql.db.active",
				"key": "ctrl+alt+c",
				"mac": "cmd+alt+enter",
				"when": "editorLangId == sql"
			},
			{
				"command": "mysql.runES",
				"key": "ctrl+enter",
				"mac": "cmd+enter",
				"when": "editorLangId == es"
			},
			{
				"command": "mysql.runAllQuery",
				"key": "ctrl+shift+enter",
				"mac": "cmd+shift+enter",
				"when": "editorLangId == sql || editorLangId == dbclient-js || editorLangId == cql || editorLangId == postgres"
			},
			{
				"command": "mysql.mock.run",
				"key": "ctrl+enter",
				"mac": "cmd+enter",
				"when": "resourceFilename =~ /mock\\.json$/ "
			}
		]
	},
	"__metadata": {
		"id": "c0fde3ce-39d4-4ea8-89ce-e2a202eeacaf",
		"publisherDisplayName": "Weijan Chen",
		"publisherId": "43004267-e6e4-497f-b826-dda371e4ec49",
		"targetPlatform": "undefined",
		"isApplicationScoped": false,
		"updated": true,
		"isPreReleaseVersion": false,
		"hasPreReleaseVersion": false,
		"installedTimestamp": 1712065739064,
		"pinned": false,
		"preRelease": false
	},
	"scripts": {
		"dev": "vite --mode=development",
		"build": "rm -rf out/ && vite build --mode=production",
		"build-test": "ts-node build.ts",
		"fetchDocs": "git submodule update --init --recursive",
		"docs": "git submodule update --remote",
		"document": "http-server ./public/docs/ -c-1",
		"lint:fix": "eslint src/**/*.{ts,js,vue} --fix",
		"cycle-check": "madge --circular --extensions ts src/",
		"lint:no-cycle": "eslint src/**/*.ts --fix --rule \"{import/no-cycle: error}\"",
		"package": "vsce package --no-dependencies",
		"repackage": "rm -rf *.vsix && npm run build && vsce package --no-dependencies",
		"grammar": "nearleyc src/bin/sql-formatter/parser/grammar.ne -o src/bin/sql-formatter/parser/grammar.ts",
		"schema": "typescript-json-schema --refs true --aliasRefs true --ignoreErrors true --include  --required tsconfig.json DBConnectionConfig>public/schema.json"
	},
	"devDependencies": {
		"@types/command-exists": "^1.2.0",
		"@types/dockerode": "^3.3.9",
		"@types/expect": "^24.3.0",
		"@types/minio": "^7.0.15",
		"@types/node": "^17.0.23",
		"@types/pg": "^8.6.5",
		"@types/snowflake-sdk": "^1.6.12",
		"@types/ssh2-streams": "^0.1.9",
		"@types/tedious": "^4.0.3",
		"@types/vscode": "1.67.0",
		"@typescript-eslint/eslint-plugin": "^5.36.2",
		"@typescript-eslint/parser": "^5.36.2",
		"@vitejs/plugin-vue2": "^2.2.0",
		"esbuild": "^0.15.7",
		"esbuild-plugin-alias": "^0.2.1",
		"eslint": "^8.23.0",
		"eslint-plugin-import": "^2.29.1",
		"eslint-plugin-unused-imports": "^2.0.0",
		"eslint-plugin-vue": "^9.8.0",
		"less": "^4.1.2",
		"madge": "^6.1.0",
		"postcss": "^8.2.1",
		"recursive-copy": "^2.0.14",
		"tailwindcss": "^3.1.8",
		"ts-node": "^10.8.0",
		"tslib": "^2.4.0",
		"typescript": "^4.6.3",
		"typescript-json-schema": "^0.54.0",
		"unplugin-auto-import": "^0.15.2",
		"unplugin-vue-components": "^0.24.1",
		"vite": "^4.2.1"
	},
	"dependencies": {
		"@antv/g-canvas": "^2.0.1",
		"@antv/g2": "^4.2.0",
		"@cweijan/mysql2": "^3.3.3",
		"@cweijan/ssh2": "^2.0.1",
		"@cweijan/xterm": "^5.1.0",
		"@database-client/dmdb": "^1.0.0",
		"@koa/cors": "^4.0.0",
		"@posthog/clickhouse": "^1.7.0",
		"@types/koa": "^2.13.6",
		"@vscode/webview-ui-toolkit": "^1.1.0",
		"ansi-colors": "^4.1.3",
		"ansi-escapes": "^5.0.0",
		"archiver": "^5.3.1",
		"argparse": "^2.0.1",
		"async": "^3.2.4",
		"axios": "^0.21.1",
		"block-stream2": "^2.0.0",
		"codemirror": "^5.41.0",
		"command-exists": "^1.2.9",
		"comment-json": "^4.1.0",
		"date-format": "^3.0.0",
		"debug": "^4.3.2",
		"deepmerge": "^3.2.0",
		"dockerode": "^3.3.2",
		"element-ui": "^2.13.2",
		"exceljs": "^4.3.0",
		"fast-xml-parser": "^4.1.3",
		"iconv-lite": "^0.6.3",
		"ioredis": "^5.0.6",
		"js-yaml": "^4.1.0",
		"json-parse-ast": "^1.0.8",
		"kafkajs": "^2.2.4",
		"koa": "^2.14.2",
		"lossless-json": "^4.0.1",
		"mariadb": "^3.3.0",
		"mime-types": "^2.1.14",
		"mongodb": "^5.7.0",
		"nearley": "^2.20.1",
		"neo4j-driver": "^4.4.3",
		"open": "^8.4.0",
		"pg": "^8.7.3",
		"pinia": "^2.1.6",
		"pretty-ms": "^8.0.0",
		"progress-stream": "^2.0.0",
		"qrcode-decoder": "^0.3.3",
		"query-string": "^7.1.1",
		"routington": "^1.0.3",
		"s-ago": "^2.2.0",
		"socks": "^2.7.1",
		"sql-formatter": "^7.0.2",
		"sqlstring": "^2.3.2",
		"supports-color": "^9.0.1",
		"tar-fs": "^2.1.1",
		"tar-stream": "^2.2.0",
		"tedious": "^15.1.2",
		"through2": "^3.0.1",
		"tree-kill": "^1.2.2",
		"umy-table": "^1.1.8",
		"vue": "^2.7.10",
		"vue-i18n": "^8.26.5",
		"vue-router": "^3.4.1",
		"xml": "^1.0.0",
		"xml2js": "^0.5.0",
		"xmlbuilder": "^15.1.1",
		"xterm-addon-canvas": "^0.3.0",
		"xterm-addon-fit": "^0.7.0",
		"xterm-addon-ligatures": "^0.6.0",
		"xterm-addon-search": "^0.10.0",
		"xterm-addon-web-links": "^0.7.0",
		"zmodem.js": "^0.1.10"
	}
}